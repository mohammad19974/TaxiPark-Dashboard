import { MigrationInterface, QueryRunner } from "typeorm";

export class UpdateSchema1755946982812 implements MigrationInterface {
    name = 'UpdateSchema1755946982812'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP INDEX "IDX_bookings_scheduledPickupTime"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_customer"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_driver"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_park"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_status"`);
        await queryRunner.query(`CREATE TABLE "temporary_bookings" ("id" varchar PRIMARY KEY NOT NULL, "bookingNumber" varchar NOT NULL, "pickupLocation" varchar NOT NULL, "pickupLatitude" decimal(10,8), "pickupLongitude" decimal(11,8), "dropoffLocation" varchar NOT NULL, "dropoffLatitude" decimal(10,8), "dropoffLongitude" decimal(11,8), "scheduledPickupTime" datetime NOT NULL, "actualPickupTime" datetime, "actualDropoffTime" datetime, "estimatedDistance" decimal(8,2), "actualDistance" decimal(8,2), "estimatedDuration" integer, "actualDuration" integer, "estimatedFare" decimal(10,2) NOT NULL, "actualFare" decimal(10,2), "passengerCount" integer NOT NULL DEFAULT (1), "status" varchar CHECK( "status" IN ('pending','confirmed','in_progress','completed','cancelled','no_show') ) NOT NULL DEFAULT ('pending'), "paymentStatus" varchar CHECK( "paymentStatus" IN ('pending','paid','partial','refunded') ) NOT NULL DEFAULT ('pending'), "paymentMethod" varchar CHECK( "paymentMethod" IN ('cash','card','mobile_money','bank_transfer') ), "specialInstructions" text, "notes" text, "customerRating" decimal(3,2), "driverRating" decimal(3,2), "customerFeedback" text, "driverFeedback" text, "cancellationReason" text, "cancelledAt" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar NOT NULL, "driverId" varchar, "vehicleId" varchar, "customerId" varchar NOT NULL, "createdById" varchar, CONSTRAINT "UQ_bookings_bookingNumber" UNIQUE ("bookingNumber"))`);
        await queryRunner.query(`INSERT INTO "temporary_bookings"("id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById") SELECT "id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById" FROM "bookings"`);
        await queryRunner.query(`DROP TABLE "bookings"`);
        await queryRunner.query(`ALTER TABLE "temporary_bookings" RENAME TO "bookings"`);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_scheduledPickupTime" ON "bookings" ("scheduledPickupTime") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_customer" ON "bookings" ("customerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_driver" ON "bookings" ("driverId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_park" ON "bookings" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_status" ON "bookings" ("status") `);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_assignedDriver"`);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_park"`);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_status"`);
        await queryRunner.query(`CREATE TABLE "temporary_vehicles" ("id" varchar PRIMARY KEY NOT NULL, "plateNumber" varchar NOT NULL, "make" varchar NOT NULL, "model" varchar NOT NULL, "year" integer NOT NULL, "color" varchar NOT NULL, "type" varchar CHECK( "type" IN ('sedan','suv','hatchback','minivan','pickup') ) NOT NULL DEFAULT ('sedan'), "fuelType" varchar CHECK( "fuelType" IN ('petrol','diesel','hybrid','electric') ) NOT NULL DEFAULT ('petrol'), "seatingCapacity" integer NOT NULL, "engineNumber" varchar, "chassisNumber" varchar, "registrationDate" date, "insuranceExpiryDate" date, "roadworthinessExpiryDate" date, "mileage" integer NOT NULL DEFAULT (0), "status" varchar CHECK( "status" IN ('active','inactive','maintenance','out_of_service','on_trip') ) NOT NULL DEFAULT ('active'), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "lastMaintenanceDate" date, "nextMaintenanceDate" date, "notes" text, "photos" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "assignedDriverId" varchar, CONSTRAINT "UQ_vehicles_plateNumber" UNIQUE ("plateNumber"))`);
        await queryRunner.query(`INSERT INTO "temporary_vehicles"("id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId") SELECT "id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId" FROM "vehicles"`);
        await queryRunner.query(`DROP TABLE "vehicles"`);
        await queryRunner.query(`ALTER TABLE "temporary_vehicles" RENAME TO "vehicles"`);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_assignedDriver" ON "vehicles" ("assignedDriverId") `);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_park" ON "vehicles" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_status" ON "vehicles" ("status") `);
        await queryRunner.query(`DROP INDEX "IDX_drivers_park"`);
        await queryRunner.query(`DROP INDEX "IDX_drivers_status"`);
        await queryRunner.query(`CREATE TABLE "temporary_drivers" ("id" varchar PRIMARY KEY NOT NULL, "firstName" varchar NOT NULL, "lastName" varchar NOT NULL, "licenseNumber" varchar NOT NULL, "licenseClass" varchar CHECK( "licenseClass" IN ('A','B','C','D') ) NOT NULL DEFAULT ('B'), "licenseExpiryDate" date NOT NULL, "phone" varchar NOT NULL, "email" varchar, "dateOfBirth" date NOT NULL, "nationalId" varchar NOT NULL, "address" text, "emergencyContact" varchar, "emergencyPhone" varchar, "status" varchar CHECK( "status" IN ('active','inactive','suspended','on_trip','available') ) NOT NULL DEFAULT ('available'), "rating" decimal(3,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "hiredDate" date, "profilePhoto" varchar, "notes" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "createdById" varchar, CONSTRAINT "UQ_1b5c0e7e8b5c0e7e8b5c0e7e8b5" UNIQUE ("licenseNumber"))`);
        await queryRunner.query(`INSERT INTO "temporary_drivers"("id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById") SELECT "id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById" FROM "drivers"`);
        await queryRunner.query(`DROP TABLE "drivers"`);
        await queryRunner.query(`ALTER TABLE "temporary_drivers" RENAME TO "drivers"`);
        await queryRunner.query(`CREATE INDEX "IDX_drivers_park" ON "drivers" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_drivers_status" ON "drivers" ("status") `);
        await queryRunner.query(`DROP INDEX "IDX_customers_phone"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_scheduledPickupTime"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_customer"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_driver"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_park"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_status"`);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_assignedDriver"`);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_park"`);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_status"`);
        await queryRunner.query(`DROP INDEX "IDX_drivers_park"`);
        await queryRunner.query(`DROP INDEX "IDX_drivers_status"`);
        await queryRunner.query(`DROP INDEX "IDX_users_email"`);
        await queryRunner.query(`CREATE TABLE "temporary_bookings" ("id" varchar PRIMARY KEY NOT NULL, "bookingNumber" varchar NOT NULL, "pickupLocation" varchar NOT NULL, "pickupLatitude" decimal(10,8), "pickupLongitude" decimal(11,8), "dropoffLocation" varchar NOT NULL, "dropoffLatitude" decimal(10,8), "dropoffLongitude" decimal(11,8), "scheduledPickupTime" datetime NOT NULL, "actualPickupTime" datetime, "actualDropoffTime" datetime, "estimatedDistance" decimal(8,2), "actualDistance" decimal(8,2), "estimatedDuration" integer, "actualDuration" integer, "estimatedFare" decimal(10,2) NOT NULL, "actualFare" decimal(10,2), "passengerCount" integer NOT NULL DEFAULT (1), "status" varchar CHECK( "status" IN ('pending','confirmed','in_progress','completed','cancelled','no_show') ) NOT NULL DEFAULT ('pending'), "paymentStatus" varchar CHECK( "paymentStatus" IN ('pending','paid','partial','refunded') ) NOT NULL DEFAULT ('pending'), "paymentMethod" varchar CHECK( "paymentMethod" IN ('cash','card','mobile_money','bank_transfer') ), "specialInstructions" text, "notes" text, "customerRating" decimal(3,2), "driverRating" decimal(3,2), "customerFeedback" text, "driverFeedback" text, "cancellationReason" text, "cancelledAt" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar NOT NULL, "driverId" varchar, "vehicleId" varchar, "customerId" varchar NOT NULL, "createdById" varchar, "confirmedAt" datetime, CONSTRAINT "UQ_bookings_bookingNumber" UNIQUE ("bookingNumber"))`);
        await queryRunner.query(`INSERT INTO "temporary_bookings"("id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById") SELECT "id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById" FROM "bookings"`);
        await queryRunner.query(`DROP TABLE "bookings"`);
        await queryRunner.query(`ALTER TABLE "temporary_bookings" RENAME TO "bookings"`);
        await queryRunner.query(`CREATE TABLE "temporary_bookings" ("id" varchar PRIMARY KEY NOT NULL, "bookingNumber" varchar NOT NULL, "pickupLocation" varchar NOT NULL, "pickupLatitude" decimal(10,8), "pickupLongitude" decimal(11,8), "dropoffLocation" varchar NOT NULL, "dropoffLatitude" decimal(10,8), "dropoffLongitude" decimal(11,8), "scheduledPickupTime" datetime NOT NULL, "actualPickupTime" datetime, "actualDropoffTime" datetime, "estimatedDistance" decimal(8,2), "actualDistance" decimal(8,2), "estimatedDuration" integer, "actualDuration" integer, "estimatedFare" decimal(10,2) NOT NULL, "actualFare" decimal(10,2), "passengerCount" integer NOT NULL DEFAULT (1), "status" varchar CHECK( "status" IN ('pending','confirmed','in_progress','completed','cancelled','no_show') ) NOT NULL DEFAULT ('pending'), "paymentStatus" varchar CHECK( "paymentStatus" IN ('pending','paid','partial','refunded') ) NOT NULL DEFAULT ('pending'), "paymentMethod" varchar CHECK( "paymentMethod" IN ('cash','card','mobile_money','bank_transfer') ), "specialInstructions" text, "notes" text, "customerRating" decimal(3,2), "driverRating" decimal(3,2), "customerFeedback" text, "driverFeedback" text, "cancellationReason" text, "cancelledAt" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar NOT NULL, "driverId" varchar, "vehicleId" varchar, "customerId" varchar NOT NULL, "createdById" varchar, "confirmedAt" datetime, CONSTRAINT "UQ_bookings_bookingNumber" UNIQUE ("bookingNumber"), CONSTRAINT "FK_de0237b7a97f865104fdaaf9fc7" FOREIGN KEY ("parkId") REFERENCES "parks" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_100b344bc1e04cc839fe90c3d53" FOREIGN KEY ("driverId") REFERENCES "drivers" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_30909e71d6dd969e95d995258f1" FOREIGN KEY ("vehicleId") REFERENCES "vehicles" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_67b9cd20f987fc6dc70f7cd283f" FOREIGN KEY ("customerId") REFERENCES "customers" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_e98232b5e7977d300fe61507215" FOREIGN KEY ("createdById") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_bookings"("id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById", "confirmedAt") SELECT "id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById", "confirmedAt" FROM "bookings"`);
        await queryRunner.query(`DROP TABLE "bookings"`);
        await queryRunner.query(`ALTER TABLE "temporary_bookings" RENAME TO "bookings"`);
        await queryRunner.query(`CREATE TABLE "temporary_vehicles" ("id" varchar PRIMARY KEY NOT NULL, "plateNumber" varchar NOT NULL, "make" varchar NOT NULL, "model" varchar NOT NULL, "year" integer NOT NULL, "color" varchar NOT NULL, "type" varchar CHECK( "type" IN ('sedan','suv','hatchback','minivan','pickup') ) NOT NULL DEFAULT ('sedan'), "fuelType" varchar CHECK( "fuelType" IN ('petrol','diesel','hybrid','electric') ) NOT NULL DEFAULT ('petrol'), "seatingCapacity" integer NOT NULL, "engineNumber" varchar, "chassisNumber" varchar, "registrationDate" date, "insuranceExpiryDate" date, "roadworthinessExpiryDate" date, "mileage" integer NOT NULL DEFAULT (0), "status" varchar CHECK( "status" IN ('active','inactive','maintenance','out_of_service','on_trip') ) NOT NULL DEFAULT ('active'), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "lastMaintenanceDate" date, "nextMaintenanceDate" date, "notes" text, "photos" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "assignedDriverId" varchar, CONSTRAINT "UQ_vehicles_plateNumber" UNIQUE ("plateNumber"), CONSTRAINT "FK_338597f48483f1c5a51938711a5" FOREIGN KEY ("parkId") REFERENCES "parks" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b8c98be05991478da0ec45bcdc2" FOREIGN KEY ("assignedDriverId") REFERENCES "drivers" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_vehicles"("id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId") SELECT "id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId" FROM "vehicles"`);
        await queryRunner.query(`DROP TABLE "vehicles"`);
        await queryRunner.query(`ALTER TABLE "temporary_vehicles" RENAME TO "vehicles"`);
        await queryRunner.query(`CREATE TABLE "temporary_drivers" ("id" varchar PRIMARY KEY NOT NULL, "firstName" varchar NOT NULL, "lastName" varchar NOT NULL, "licenseNumber" varchar NOT NULL, "licenseClass" varchar CHECK( "licenseClass" IN ('A','B','C','D') ) NOT NULL DEFAULT ('B'), "licenseExpiryDate" date NOT NULL, "phone" varchar NOT NULL, "email" varchar, "dateOfBirth" date NOT NULL, "nationalId" varchar NOT NULL, "address" text, "emergencyContact" varchar, "emergencyPhone" varchar, "status" varchar CHECK( "status" IN ('active','inactive','suspended','on_trip','available') ) NOT NULL DEFAULT ('available'), "rating" decimal(3,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "hiredDate" date, "profilePhoto" varchar, "notes" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "createdById" varchar, CONSTRAINT "UQ_1b5c0e7e8b5c0e7e8b5c0e7e8b5" UNIQUE ("licenseNumber"), CONSTRAINT "FK_3573920fce5eb2cc42d1478bce6" FOREIGN KEY ("parkId") REFERENCES "parks" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b6d45999d44bfe69a3bff80355d" FOREIGN KEY ("createdById") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_drivers"("id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById") SELECT "id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById" FROM "drivers"`);
        await queryRunner.query(`DROP TABLE "drivers"`);
        await queryRunner.query(`ALTER TABLE "temporary_drivers" RENAME TO "drivers"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "drivers" RENAME TO "temporary_drivers"`);
        await queryRunner.query(`CREATE TABLE "drivers" ("id" varchar PRIMARY KEY NOT NULL, "firstName" varchar NOT NULL, "lastName" varchar NOT NULL, "licenseNumber" varchar NOT NULL, "licenseClass" varchar CHECK( "licenseClass" IN ('A','B','C','D') ) NOT NULL DEFAULT ('B'), "licenseExpiryDate" date NOT NULL, "phone" varchar NOT NULL, "email" varchar, "dateOfBirth" date NOT NULL, "nationalId" varchar NOT NULL, "address" text, "emergencyContact" varchar, "emergencyPhone" varchar, "status" varchar CHECK( "status" IN ('active','inactive','suspended','on_trip','available') ) NOT NULL DEFAULT ('available'), "rating" decimal(3,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "hiredDate" date, "profilePhoto" varchar, "notes" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "createdById" varchar, CONSTRAINT "UQ_1b5c0e7e8b5c0e7e8b5c0e7e8b5" UNIQUE ("licenseNumber"))`);
        await queryRunner.query(`INSERT INTO "drivers"("id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById") SELECT "id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById" FROM "temporary_drivers"`);
        await queryRunner.query(`DROP TABLE "temporary_drivers"`);
        await queryRunner.query(`ALTER TABLE "vehicles" RENAME TO "temporary_vehicles"`);
        await queryRunner.query(`CREATE TABLE "vehicles" ("id" varchar PRIMARY KEY NOT NULL, "plateNumber" varchar NOT NULL, "make" varchar NOT NULL, "model" varchar NOT NULL, "year" integer NOT NULL, "color" varchar NOT NULL, "type" varchar CHECK( "type" IN ('sedan','suv','hatchback','minivan','pickup') ) NOT NULL DEFAULT ('sedan'), "fuelType" varchar CHECK( "fuelType" IN ('petrol','diesel','hybrid','electric') ) NOT NULL DEFAULT ('petrol'), "seatingCapacity" integer NOT NULL, "engineNumber" varchar, "chassisNumber" varchar, "registrationDate" date, "insuranceExpiryDate" date, "roadworthinessExpiryDate" date, "mileage" integer NOT NULL DEFAULT (0), "status" varchar CHECK( "status" IN ('active','inactive','maintenance','out_of_service','on_trip') ) NOT NULL DEFAULT ('active'), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "lastMaintenanceDate" date, "nextMaintenanceDate" date, "notes" text, "photos" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "assignedDriverId" varchar, CONSTRAINT "UQ_vehicles_plateNumber" UNIQUE ("plateNumber"))`);
        await queryRunner.query(`INSERT INTO "vehicles"("id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId") SELECT "id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId" FROM "temporary_vehicles"`);
        await queryRunner.query(`DROP TABLE "temporary_vehicles"`);
        await queryRunner.query(`ALTER TABLE "bookings" RENAME TO "temporary_bookings"`);
        await queryRunner.query(`CREATE TABLE "bookings" ("id" varchar PRIMARY KEY NOT NULL, "bookingNumber" varchar NOT NULL, "pickupLocation" varchar NOT NULL, "pickupLatitude" decimal(10,8), "pickupLongitude" decimal(11,8), "dropoffLocation" varchar NOT NULL, "dropoffLatitude" decimal(10,8), "dropoffLongitude" decimal(11,8), "scheduledPickupTime" datetime NOT NULL, "actualPickupTime" datetime, "actualDropoffTime" datetime, "estimatedDistance" decimal(8,2), "actualDistance" decimal(8,2), "estimatedDuration" integer, "actualDuration" integer, "estimatedFare" decimal(10,2) NOT NULL, "actualFare" decimal(10,2), "passengerCount" integer NOT NULL DEFAULT (1), "status" varchar CHECK( "status" IN ('pending','confirmed','in_progress','completed','cancelled','no_show') ) NOT NULL DEFAULT ('pending'), "paymentStatus" varchar CHECK( "paymentStatus" IN ('pending','paid','partial','refunded') ) NOT NULL DEFAULT ('pending'), "paymentMethod" varchar CHECK( "paymentMethod" IN ('cash','card','mobile_money','bank_transfer') ), "specialInstructions" text, "notes" text, "customerRating" decimal(3,2), "driverRating" decimal(3,2), "customerFeedback" text, "driverFeedback" text, "cancellationReason" text, "cancelledAt" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar NOT NULL, "driverId" varchar, "vehicleId" varchar, "customerId" varchar NOT NULL, "createdById" varchar, "confirmedAt" datetime, CONSTRAINT "UQ_bookings_bookingNumber" UNIQUE ("bookingNumber"))`);
        await queryRunner.query(`INSERT INTO "bookings"("id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById", "confirmedAt") SELECT "id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById", "confirmedAt" FROM "temporary_bookings"`);
        await queryRunner.query(`DROP TABLE "temporary_bookings"`);
        await queryRunner.query(`ALTER TABLE "bookings" RENAME TO "temporary_bookings"`);
        await queryRunner.query(`CREATE TABLE "bookings" ("id" varchar PRIMARY KEY NOT NULL, "bookingNumber" varchar NOT NULL, "pickupLocation" varchar NOT NULL, "pickupLatitude" decimal(10,8), "pickupLongitude" decimal(11,8), "dropoffLocation" varchar NOT NULL, "dropoffLatitude" decimal(10,8), "dropoffLongitude" decimal(11,8), "scheduledPickupTime" datetime NOT NULL, "actualPickupTime" datetime, "actualDropoffTime" datetime, "estimatedDistance" decimal(8,2), "actualDistance" decimal(8,2), "estimatedDuration" integer, "actualDuration" integer, "estimatedFare" decimal(10,2) NOT NULL, "actualFare" decimal(10,2), "passengerCount" integer NOT NULL DEFAULT (1), "status" varchar CHECK( "status" IN ('pending','confirmed','in_progress','completed','cancelled','no_show') ) NOT NULL DEFAULT ('pending'), "paymentStatus" varchar CHECK( "paymentStatus" IN ('pending','paid','partial','refunded') ) NOT NULL DEFAULT ('pending'), "paymentMethod" varchar CHECK( "paymentMethod" IN ('cash','card','mobile_money','bank_transfer') ), "specialInstructions" text, "notes" text, "customerRating" decimal(3,2), "driverRating" decimal(3,2), "customerFeedback" text, "driverFeedback" text, "cancellationReason" text, "cancelledAt" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar NOT NULL, "driverId" varchar, "vehicleId" varchar, "customerId" varchar NOT NULL, "createdById" varchar, CONSTRAINT "UQ_bookings_bookingNumber" UNIQUE ("bookingNumber"))`);
        await queryRunner.query(`INSERT INTO "bookings"("id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById") SELECT "id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById" FROM "temporary_bookings"`);
        await queryRunner.query(`DROP TABLE "temporary_bookings"`);
        await queryRunner.query(`CREATE INDEX "IDX_users_email" ON "users" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_drivers_status" ON "drivers" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_drivers_park" ON "drivers" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_status" ON "vehicles" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_park" ON "vehicles" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_assignedDriver" ON "vehicles" ("assignedDriverId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_status" ON "bookings" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_park" ON "bookings" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_driver" ON "bookings" ("driverId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_customer" ON "bookings" ("customerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_scheduledPickupTime" ON "bookings" ("scheduledPickupTime") `);
        await queryRunner.query(`CREATE INDEX "IDX_customers_phone" ON "customers" ("phone") `);
        await queryRunner.query(`DROP INDEX "IDX_drivers_status"`);
        await queryRunner.query(`DROP INDEX "IDX_drivers_park"`);
        await queryRunner.query(`ALTER TABLE "drivers" RENAME TO "temporary_drivers"`);
        await queryRunner.query(`CREATE TABLE "drivers" ("id" varchar PRIMARY KEY NOT NULL, "firstName" varchar NOT NULL, "lastName" varchar NOT NULL, "licenseNumber" varchar NOT NULL, "licenseClass" varchar CHECK( "licenseClass" IN ('A','B','C','D') ) NOT NULL DEFAULT ('B'), "licenseExpiryDate" date NOT NULL, "phone" varchar NOT NULL, "email" varchar, "dateOfBirth" date NOT NULL, "nationalId" varchar NOT NULL, "address" text, "emergencyContact" varchar, "emergencyPhone" varchar, "status" varchar CHECK( "status" IN ('active','inactive','suspended','on_trip','available') ) NOT NULL DEFAULT ('available'), "rating" decimal(3,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "hiredDate" date, "profilePhoto" varchar, "notes" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "createdById" varchar, CONSTRAINT "UQ_1b5c0e7e8b5c0e7e8b5c0e7e8b5" UNIQUE ("licenseNumber"), CONSTRAINT "FK_drivers_createdBy" FOREIGN KEY ("createdById") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_drivers_park" FOREIGN KEY ("parkId") REFERENCES "parks" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "drivers"("id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById") SELECT "id", "firstName", "lastName", "licenseNumber", "licenseClass", "licenseExpiryDate", "phone", "email", "dateOfBirth", "nationalId", "address", "emergencyContact", "emergencyPhone", "status", "rating", "totalTrips", "totalEarnings", "hiredDate", "profilePhoto", "notes", "createdAt", "updatedAt", "parkId", "createdById" FROM "temporary_drivers"`);
        await queryRunner.query(`DROP TABLE "temporary_drivers"`);
        await queryRunner.query(`CREATE INDEX "IDX_drivers_status" ON "drivers" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_drivers_park" ON "drivers" ("parkId") `);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_status"`);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_park"`);
        await queryRunner.query(`DROP INDEX "IDX_vehicles_assignedDriver"`);
        await queryRunner.query(`ALTER TABLE "vehicles" RENAME TO "temporary_vehicles"`);
        await queryRunner.query(`CREATE TABLE "vehicles" ("id" varchar PRIMARY KEY NOT NULL, "plateNumber" varchar NOT NULL, "make" varchar NOT NULL, "model" varchar NOT NULL, "year" integer NOT NULL, "color" varchar NOT NULL, "type" varchar CHECK( "type" IN ('sedan','suv','hatchback','minivan','pickup') ) NOT NULL DEFAULT ('sedan'), "fuelType" varchar CHECK( "fuelType" IN ('petrol','diesel','hybrid','electric') ) NOT NULL DEFAULT ('petrol'), "seatingCapacity" integer NOT NULL, "engineNumber" varchar, "chassisNumber" varchar, "registrationDate" date, "insuranceExpiryDate" date, "roadworthinessExpiryDate" date, "mileage" integer NOT NULL DEFAULT (0), "status" varchar CHECK( "status" IN ('active','inactive','maintenance','out_of_service','on_trip') ) NOT NULL DEFAULT ('active'), "totalEarnings" decimal(10,2) NOT NULL DEFAULT (0), "totalTrips" integer NOT NULL DEFAULT (0), "lastMaintenanceDate" date, "nextMaintenanceDate" date, "notes" text, "photos" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar, "assignedDriverId" varchar, CONSTRAINT "UQ_vehicles_plateNumber" UNIQUE ("plateNumber"), CONSTRAINT "FK_vehicles_assignedDriver" FOREIGN KEY ("assignedDriverId") REFERENCES "drivers" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_vehicles_park" FOREIGN KEY ("parkId") REFERENCES "parks" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "vehicles"("id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId") SELECT "id", "plateNumber", "make", "model", "year", "color", "type", "fuelType", "seatingCapacity", "engineNumber", "chassisNumber", "registrationDate", "insuranceExpiryDate", "roadworthinessExpiryDate", "mileage", "status", "totalEarnings", "totalTrips", "lastMaintenanceDate", "nextMaintenanceDate", "notes", "photos", "createdAt", "updatedAt", "parkId", "assignedDriverId" FROM "temporary_vehicles"`);
        await queryRunner.query(`DROP TABLE "temporary_vehicles"`);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_status" ON "vehicles" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_park" ON "vehicles" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_vehicles_assignedDriver" ON "vehicles" ("assignedDriverId") `);
        await queryRunner.query(`DROP INDEX "IDX_bookings_status"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_park"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_driver"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_customer"`);
        await queryRunner.query(`DROP INDEX "IDX_bookings_scheduledPickupTime"`);
        await queryRunner.query(`ALTER TABLE "bookings" RENAME TO "temporary_bookings"`);
        await queryRunner.query(`CREATE TABLE "bookings" ("id" varchar PRIMARY KEY NOT NULL, "bookingNumber" varchar NOT NULL, "pickupLocation" varchar NOT NULL, "pickupLatitude" decimal(10,8), "pickupLongitude" decimal(11,8), "dropoffLocation" varchar NOT NULL, "dropoffLatitude" decimal(10,8), "dropoffLongitude" decimal(11,8), "scheduledPickupTime" datetime NOT NULL, "actualPickupTime" datetime, "actualDropoffTime" datetime, "estimatedDistance" decimal(8,2), "actualDistance" decimal(8,2), "estimatedDuration" integer, "actualDuration" integer, "estimatedFare" decimal(10,2) NOT NULL, "actualFare" decimal(10,2), "passengerCount" integer NOT NULL DEFAULT (1), "status" varchar CHECK( "status" IN ('pending','confirmed','in_progress','completed','cancelled','no_show') ) NOT NULL DEFAULT ('pending'), "paymentStatus" varchar CHECK( "paymentStatus" IN ('pending','paid','partial','refunded') ) NOT NULL DEFAULT ('pending'), "paymentMethod" varchar CHECK( "paymentMethod" IN ('cash','card','mobile_money','bank_transfer') ), "specialInstructions" text, "notes" text, "customerRating" decimal(3,2), "driverRating" decimal(3,2), "customerFeedback" text, "driverFeedback" text, "cancellationReason" text, "cancelledAt" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "parkId" varchar NOT NULL, "driverId" varchar, "vehicleId" varchar, "customerId" varchar NOT NULL, "createdById" varchar, CONSTRAINT "UQ_bookings_bookingNumber" UNIQUE ("bookingNumber"), CONSTRAINT "FK_bookings_createdBy" FOREIGN KEY ("createdById") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_bookings_customer" FOREIGN KEY ("customerId") REFERENCES "customers" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_bookings_vehicle" FOREIGN KEY ("vehicleId") REFERENCES "vehicles" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_bookings_driver" FOREIGN KEY ("driverId") REFERENCES "drivers" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_bookings_park" FOREIGN KEY ("parkId") REFERENCES "parks" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "bookings"("id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById") SELECT "id", "bookingNumber", "pickupLocation", "pickupLatitude", "pickupLongitude", "dropoffLocation", "dropoffLatitude", "dropoffLongitude", "scheduledPickupTime", "actualPickupTime", "actualDropoffTime", "estimatedDistance", "actualDistance", "estimatedDuration", "actualDuration", "estimatedFare", "actualFare", "passengerCount", "status", "paymentStatus", "paymentMethod", "specialInstructions", "notes", "customerRating", "driverRating", "customerFeedback", "driverFeedback", "cancellationReason", "cancelledAt", "createdAt", "updatedAt", "parkId", "driverId", "vehicleId", "customerId", "createdById" FROM "temporary_bookings"`);
        await queryRunner.query(`DROP TABLE "temporary_bookings"`);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_status" ON "bookings" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_park" ON "bookings" ("parkId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_driver" ON "bookings" ("driverId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_customer" ON "bookings" ("customerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bookings_scheduledPickupTime" ON "bookings" ("scheduledPickupTime") `);
    }

}
